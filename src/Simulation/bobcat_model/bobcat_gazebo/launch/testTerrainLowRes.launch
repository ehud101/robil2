<!-- -*- mode: XML -*- -->
<launch>

  <!-- these are the arguments you can pass this launch file, for example paused:=true -->
  <arg name="paused" default="false"/>
  <arg name="use_sim_time" default="true"/>
  <arg name="gui" default="true"/>
  <arg name="headless" default="false"/>
  <arg name="debug" default="false"/>

  <!-- We resume the logic in empty_world.launch -->
  <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <arg name="debug" value="$(arg debug)" />
    <arg name="gui" value="$(arg gui)" />
    <arg name="paused" value="$(arg paused)"/>
    <arg name="use_sim_time" value="$(arg use_sim_time)"/>
    <arg name="headless" value="$(arg headless)"/>
    <arg name="world_name" value="worlds/testgroundLowRes.world"/>
  </include>

  <!-- Load the URDF into the ROS Parameter Server -->
  <!--<param name="robot_description"
	 command="$(find xacro)/xacro.py '$(find clam_description)/urdf/clam.xacro'" />-->
  <param name="robot_description" command="cat $(find bobcat)/urdf/BOBCAT.URDF" />


  <!-- Run a python script to the send a service call to gazebo_ros to spawn a URDF robot -->
  <node name="urdf_spawner" pkg="gazebo_ros" type="spawn_model" respawn="false" output="screen"
	args="-urdf -model Sahar -param robot_description -z 2.916 -x 20.4 -y -14.75 Yaw 1"/>

  <param name="robot_description2" command="cat $(find bobcat)/urdf/barile.URDF" />

  <!-- Run a python script to the send a service call to gazebo_ros to spawn a URDF robot -->
  <node name="urdf_spawner2" pkg="gazebo_ros" type="spawn_model" respawn="false" output="screen"
	args="-urdf -model barile -param robot_description2 -z 1 -x 25 -y -14.75 Yaw 1"/>

  <!-- ros_control clam launch file -->
  <include file="$(find bobcat_gazebo)/launch/bobcat_gazebo_control.launch" />

 <node name="RateToEffort" pkg="rate2effort" type="rate2effort" cwd="node" output="screen" /> 


</launch>
