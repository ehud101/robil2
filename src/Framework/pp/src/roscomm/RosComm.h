
/*
 * RosComm.h
 *
 *  Created on: Thursday, 06. February 2014 04:09PM
 *      Author: autogenerated
 */
#ifndef ROSCOMM_H_
#define ROSCOMM_H_
#include <ros/ros.h>
#include <std_msgs/String.h>
#include <string>       // std::string
#include <iostream>     // std::cout
#include <sstream>
#include <ParameterTypes.h>
#include <tf/tf.h>
class ComponentMain;
class RosComm {
  bool _inited;
  ComponentMain   * _comp;
  ros::NodeHandle _nh;
	ros::Subscriber _sub_Map;
	ros::Subscriber _sub_Odometry;
	ros::Subscriber _sub_PPCommand;
	ros::Subscriber _sub_GlobalPath;
	ros::Subscriber _sub_MaxSpeed;
	ros::Publisher  _pub_LocalPath;
	ros::Publisher  _pub_PPExecutionState;
	ros::Publisher  _pub_PPComponentState;

  bool init(int argc,char** argv);
public:
	RosComm(ComponentMain* comp,int argc,char** argv);
	virtual ~RosComm();
	void MapCallback(const config::PP::sub::Map::ConstPtr &msg);
	void OdometryCallback(const config::PP::sub::Odometry::ConstPtr &msg);
	void PPCommandCallback(const config::PP::sub::PPCommand::ConstPtr &msg);
	void GlobalPathCallback(const config::PP::sub::GlobalPath::ConstPtr &msg);
	void MaxSpeedCallback(const config::PP::sub::MaxSpeed::ConstPtr &msg);
	void publishLocalPath( config::PP::pub::LocalPath &msg);
	void publishPPExecutionState( config::PP::pub::PPExecutionState &msg);
	void publishPPComponentState( config::PP::pub::PPComponentState &msg);

  void publishTransform(const tf::Transform& _tf, std::string srcFrame, std::string distFrame);
  tf::StampedTransform getLastTrasform(std::string srcFrame, std::string distFrame);
};
#endif /* ROSCOMM_H_ */
