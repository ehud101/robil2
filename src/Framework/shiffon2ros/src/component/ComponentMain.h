
/*
 * ComponentMain.h
 *
 *  Created on: Monday, 07. September 2015 03:23PM
 *      Author: autogenerated
 */
#ifndef COMPONENTMAIN_H_
#define COMPONENTMAIN_H_
#include <std_msgs/String.h>
#include <ParameterTypes.h>
#include <tf/tf.h>
#include "../Shiphon_IO/Shiphon_IO.h"

#include <ros/ros.h>
#include <std_msgs/String.h>
#include <string>       // std::string
#include <iostream>     // std::cout
#include <sstream>
#include <boost/thread.hpp>

class ComponentMain {
	bool _inited;
	  ros::NodeHandle _nh;
	  ros::Publisher _pub_diagnostic;
	  boost::thread_group _maintains;

		ros::Publisher  _pub_GPS;
		ros::Publisher  _pub_INS;
		ros::Publisher  _pub_INS2;
		ros::Publisher  _pub_GpsSpeed;
		ros::Publisher  _pub_GpsSpeed2; //Temporary topic for displaying in RQT

		string IPADDR;

	  bool init(int argc,char** argv);
	Shiphon_Ctrl * 	_shiphonCtrl;
	pthread_t _myHeartbeatThread;
public:
	ComponentMain(int argc,char** argv);
	virtual ~ComponentMain();

	void publishGPS(config::SHIFFON2ROS::pub::GPS& msg);
	void publishINS(config::SHIFFON2ROS::pub::INS& msg);
	void publishINS2(std_msgs::Float64& msg);
	void publishGpsSpeed(config::SHIFFON2ROS::pub::GpsSpeed& msg);
	void publishGpsSpeed2(std_msgs::Float64& msg);
	void publishTransform(const tf::Transform& _tf, std::string srcFrame, std::string distFrame);
	tf::StampedTransform getLastTransform(std::string srcFrame, std::string distFrame);
	void publishDiagnostic(const diagnostic_msgs::DiagnosticStatus& _report);
	void publishDiagnostic(const std_msgs::Header& header, const diagnostic_msgs::DiagnosticStatus& _report);

	void InitShiphonConection();
	void ReadAndPub_ShiphonGPS();
	void ReadAndPub_ShiphonINS();
	void ReadAndPub_ShiphonGpsSpeed();
	void heartbeat();
	static void *callHeartbeat(void *pThis);

};
#endif /* COMPONENTMAIN_H_ */
