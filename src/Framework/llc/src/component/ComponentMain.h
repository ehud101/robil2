
/*
 * ComponentMain.h
 *
 *  Created on: Thursday, 06. February 2014 04:09PM
 *      Author: autogenerated
 */
#ifndef COMPONENTMAIN_H_
#define COMPONENTMAIN_H_
#include <std_msgs/String.h>
#include <ParameterTypes.h>
#include <tf/tf.h>
class RosComm;
class ComponentMain {
	RosComm* _roscomm;
public:
	ComponentMain(int argc,char** argv);
	virtual ~ComponentMain();
	void handleWSMSpeed(const config::LLC::sub::WSMSpeed& msg);
	void handleBladePositionCommand(const config::LLC::sub::BladePositionCommand& msg);
	void handleWPDSpeed(const config::LLC::sub::WPDSpeed& msg);
	void handleOdometry(const config::LLC::sub::Odometry& msg);
	void handleLLCCommand(const config::LLC::sub::LLCCommand& msg);
	void handleTeleoperationThrottle(const config::LLC::sub::TeleoperationThrottle& msg);
	void handleTeleoperationSteering(const config::LLC::sub::TeleoperationSteering& msg);
	void handleTeleoperationJoints(const config::LLC::sub::TeleoperationJoints& msg);
	void publishTrottleEffort(config::LLC::pub::TrottleEffort& msg);
	void publishSteeringEffort(config::LLC::pub::SteeringEffort& msg);
	void publishJointsEffort(config::LLC::pub::JointsEffort& msg);
	void publishLLCPlatformState(config::LLC::pub::LLCPlatformState& msg);
	void publishLLCComponentState(config::LLC::pub::LLCComponentState& msg);
  void publishTransform(const tf::Transform& _tf, std::string srcFrame, std::string distFrame);
  tf::StampedTransform getLastTrasform(std::string srcFrame, std::string distFrame);
};
#endif /* COMPONENTMAIN_H_ */
