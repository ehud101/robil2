
/*
 * ComponentMain.h
 *
 *  Created on: Sunday, 02. February 2014 03:25PM
 *      Author: autogenerated
 */
#ifndef COMPONENTMAIN_H_
#define COMPONENTMAIN_H_
#include <std_msgs/String.h>
#include <ParameterTypes.h>
#include <tf/tf.h>
class RosComm;
class ComponentMain {
	RosComm* _roscomm;
public:
	ComponentMain(int argc,char** argv);
	virtual ~ComponentMain();
	void handleSpeed(const config::LLC::sub::Speed& msg);
	void handleTrottleEffort(const config::LLC::sub::TrottleEffort& msg);
	void handleSteeringEffort(const config::LLC::sub::SteeringEffort& msg);
	void handleJointsEffort(const config::LLC::sub::JointsEffort& msg);
	void handleTeleoperation(const config::LLC::sub::Teleoperation& msg);
	void publishTrottleEffort(config::LLC::pub::TrottleEffort& msg);
	void publishSteeringEffort(config::LLC::pub::SteeringEffort& msg);
	void publishJointsEffort(config::LLC::pub::JointsEffort& msg);
  void publishTransform(const tf::Transform& _tf, std::string srcFrame, std::string distFrame);
  tf::StampedTransform getLastTrasform(std::string srcFrame, std::string distFrame);
};
#endif /* COMPONENTMAIN_H_ */
