23/11/2014 SHA: 574d4e2830f18c893266f060f39e334ea453e140
What's new:
===========
Changed the structure of the module, to give it more stability.
Implemented a better ground - relative blade manipulation algorithm.

Known limitations:
=============
!IMPORTANT!

1. I've added my own subscriber to the topic /PER/MAP. So, in order to compile the WSM, you should follow these steps:
	a. Add the third line to : robil2/configuration.yaml
		#WSM
		WSM_sub_WorkSeqData: 'SMME'
		WSM_sub_BladePosition: 'PER'
		WSM_sub_MiniMap: 'PER'
	b. Add this line to "ParameterTypes.h" in robil2/include: 

		DEF_SUB( WSM, WorkSeqData, SMME )
		DEF_SUB( WSM, BladePosition, PER )
		DEF_SUB( WSM , MiniMap , PER)

	c. Complie.

	NOTE - if you were to run "regenerate.py", or any other auto-generating code script, all these changed will revoke, and you'll have to do this again.
	
2. Right Now, via the new algorithm, the ground height is calculated good, I only need to clibrate the closed-control loop further.

!/IMPORTANT!

27/10/2014 SHA: 7a314ef9b2c3e2ec63d361cb034c0dc7d2022da8

What's new:
===========
1. Added Monitoring topic, addressing how much time a step took.
2. Ground - related blade Manipulation, for tasks 1,4,5.

Known limitations:
=============

1. Right now, ground-relative manipulation for tasks 4,5 assumes a sensor mounted below the blade, 
   updating the blade's distance from the ground. (As disscused with Eliya.)
2. Monitoring topic is: "/monitor/task_time" , and completely detached from robil2 framework.

****************************************************************************************
8/09/2014 SHA: 797747d22895145136af556355e17af6a2aad428
What's new:
===========
1. It's possible to pause a mission during a step; also, when returning to execute the step, the step will continue normally.
2. Mission complete with correct mission id from recieved header is being published.

-Note:-
1. We assumed that each task and each mission has unique ID.

****************************************************************************************
11/08/2014 SHA: 6daab9b421fbd525717f62f86a645571936c2e4e
What's new:
===========
1. Lifting Loader whilst keeping the Blade's pitch (Using Inverse Kinematics).
2. Change's blade angle between -30 degrees to 56 degrees (Using Inverse Kinematics).
3. Improved travelling distance for type 4 and type 5 tasks.
4. added new Inverse kinematics class.

Tests:
=============
In order to test our WSM node, please take these follwing steps:

1. Run the Gazebo Simulation - In *any* world enviorment.
2. Make sure that the Gazebo controllers are up, otherwise run:
	roslaunch bobcat_gazebo bobcat_gazebo_control.launch
3. Run robil2conf frameworkInit.launch 
4. Make sure that RateToEffort node is alive and running via "rqt_graph"
5. open a Terminal window, and use "rostopic pub /SMME/WSM/Task robil2msgs AssinManipulatorTask " 	
6. press TAB twice, and fill in the details.

****************************************************************************************
07/07/2014 SHA: 6339f6e86ba0e5b82c070a1abfc8d62ffe59804d
What's new:
===========
1. Lifting loader, closing clamps and rotating loader works
2. Position is based on Gazebo instead of localization

Tests:
=============
In order to test our WSM node, please take these follwing steps:

1. Run the Gazebo Simulation - In *any* world enviorment.
2. Make sure that the Gazebo controllers are up, otherwise run:
	roslaunch bobcat_gazebo bobcat_gazebo_control.launch
3. Run robil2conf frameworkInit.launch 
4. Make sure that RateToEffort node is alive and running via "rqt_graph"
5. Pull the model's Loader by publishing 1 to the topic:
	/Sahar/supporter_position_controller/command	
6. Publish a referenced speed with the Topic "/SMME/WSM/Task" - i.e: moving forward 5 meters
 "header:
  seq: 0
  stamp:
    secs: 0
    nsecs: 0
  frame_id: ''
task_id: '33'
task_description: 'Moving forward'
steps:
- {id: 1, type: 4, value: 5, blade_relativity: 0, success_timeout: 50, duration_at_end: 1}"


****************************************************************************************
25/06/2014 SHA: 5a5c7cd92d84c2eaded8f5000083303caa701fb6
What's new:
===========
1. Fixed 'turn' command and preparing blade commands

Tests:
=============
In order to test our WSM node, please take these follwing steps:

1. Run the Gazebo Simulation - In *any* world enviorment.
2. Make sure that the Gazebo controllers are up, otherwise run:
	roslaunch bobcat_gazebo bobcat_gazebo_control.launch
3. Run robil2conf frameworkInit.launch 
4. Make sure that RateToEffort node is alive and running via "rqt_graph"
5. Pull the model's Loader by publishing 1 to the topic:
	/Sahar/supporter_position_controller/command	
6. Publish a referenced speed with the Topic "/SMME/WSM/Task" - i.e: moving forward 5 meters
 "header:
  seq: 0
  stamp:
    secs: 0
    nsecs: 0
  frame_id: ''
task_id: '33'
task_description: 'Moving forward'
steps:
- {id: 1, type: 4, value: 5, blade_relativity: 0, success_timeout: 50, duration_at_end: 1}"

=========================
1. We checked the bobcat's functioning @ testTerrian world, available in 'live_bobcat' package.

****************************************************************************************
17/06/2014 SHA: 56522f5efe7fd736291e055b2d013a40a9293547
What's new:
===========
1. First implementation of WSM

Tests:
=============
In order to test our WSM node, please take these follwing steps:

1. Run the Gazebo Simulation - In *any* world enviorment.
2. Make sure that the Gazebo controllers are up, otherwise run:
	roslaunch bobcat_gazebo bobcat_gazebo_control.launch
3. Run robil2conf frameworkInit.launch 
4. Make sure that RateToEffort node is alive and running via "rqt_graph"
5. Pull the model's Loader by publishing 1 to the topic:
	/Sahar/supporter_position_controller/command	
6. Publish a referenced speed with the Topic "/SMME/WSM/Task" - i.e: moving forward 5 meters
 "header:
  seq: 0
  stamp:
    secs: 0
    nsecs: 0
  frame_id: ''
task_id: '33'
task_description: 'Moving forward'
steps:
- {id: 1, type: 4, value: 5, blade_relativity: 0, success_timeout: 50, duration_at_end: 1}"

=========================
1. We checked the bobcat's functioning @ testTerrian world, available in 'live_bobcat' package.
