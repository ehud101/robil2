
/*
 * RosComm.h
 *
 *  Created on: Thursday, 30. January 2014 04:16PM
 *      Author: autogenerated
 */
#ifndef ROSCOMM_H_
#define ROSCOMM_H_
#include <ros/ros.h>
#include <std_msgs/String.h>
#include <string>       // std::string
#include <iostream>     // std::cout
#include <sstream>
#include <ParameterTypes.h>
class ComponentMain;
class RosComm {
  ComponentMain   * _comp;
  ros::NodeHandle _nh;

	ros::Publisher  _pub_Sensor_SICK;
	ros::Publisher  _pub_Sensor_IBEO;
	ros::Publisher  _pub_Sensor_CAM_R;
	ros::Publisher  _pub_Sensor_CAM_L;
	ros::Publisher  _pub_Sensor_WIRE;
	ros::Publisher  _pub_Sensor_INSGPS;

public:
	RosComm(ComponentMain* comp,int argc,char** argv);
	virtual ~RosComm();

	void publishSensor_SICK( config::SENSORS::pub::Sensor_SICK &msg);
	void publishSensor_IBEO( config::SENSORS::pub::Sensor_IBEO &msg);
	void publishSensor_CAM_R( config::SENSORS::pub::Sensor_CAM_R &msg);
	void publishSensor_CAM_L( config::SENSORS::pub::Sensor_CAM_L &msg);
	void publishSensor_WIRE( config::SENSORS::pub::Sensor_WIRE &msg);
	void publishSensor_INSGPS( config::SENSORS::pub::Sensor_INSGPS &msg);

};
#endif /* ROSCOMM_H_ */
