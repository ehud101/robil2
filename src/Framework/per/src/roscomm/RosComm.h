
/*
 * RosComm.h
 *
 *  Created on: Thursday, 30. January 2014 04:16PM
 *      Author: autogenerated
 */
#ifndef ROSCOMM_H_
#define ROSCOMM_H_
#include <ros/ros.h>
#include <std_msgs/String.h>
#include <string>       // std::string
#include <iostream>     // std::cout
#include <sstream>
#include <ParameterTypes.h>
class ComponentMain;
class RosComm {
  ComponentMain   * _comp;
  ros::NodeHandle _nh;
	ros::Subscriber _sub_Sensor_SICK;
	ros::Subscriber _sub_Sensor_IBEO;
	ros::Subscriber _sub_Sensor_CAM_R;
	ros::Subscriber _sub_Sensor_CAM_L;
	ros::Subscriber _sub_Sensor_WIRE;
	ros::Subscriber _sub_Sensor_INSGPS;
	ros::Publisher  _pub_WiresLengths;
	ros::Publisher  _pub_Camera;
	ros::Publisher  _pub_Laser;
	ros::Publisher  _pub_INS;
	ros::Publisher  _pub_GPS;
	ros::Publisher  _pub_TF;

public:
	RosComm(ComponentMain* comp,int argc,char** argv);
	virtual ~RosComm();
	void Sensor_SICKCallback(const config::PER::sub::Sensor_SICK::ConstPtr &msg);
	void Sensor_IBEOCallback(const config::PER::sub::Sensor_IBEO::ConstPtr &msg);
	void Sensor_CAM_RCallback(const config::PER::sub::Sensor_CAM_R::ConstPtr &msg);
	void Sensor_CAM_LCallback(const config::PER::sub::Sensor_CAM_L::ConstPtr &msg);
	void Sensor_WIRECallback(const config::PER::sub::Sensor_WIRE::ConstPtr &msg);
	void Sensor_INSGPSCallback(const config::PER::sub::Sensor_INSGPS::ConstPtr &msg);
	void publishWiresLengths( config::PER::pub::WiresLengths &msg);
	void publishCamera( config::PER::pub::Camera &msg);
	void publishLaser( config::PER::pub::Laser &msg);
	void publishINS( config::PER::pub::INS &msg);
	void publishGPS( config::PER::pub::GPS &msg);
	void publishTF( config::PER::pub::TF &msg);

};
#endif /* ROSCOMM_H_ */
