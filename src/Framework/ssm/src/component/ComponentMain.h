
/*
 * ComponentMain.h
 *
 *  Created on: Thursday, 06. February 2014 04:09PM
 *      Author: autogenerated
 */
#ifndef COMPONENTMAIN_H_
#define COMPONENTMAIN_H_
#include <std_msgs/String.h>
#include <ParameterTypes.h>
#include <tf/tf.h>
class RosComm;
class ComponentMain {
	RosComm* _roscomm;
public:
	ComponentMain(int argc,char** argv);
	virtual ~ComponentMain();
	void handleLLCPlatformState(const config::SSM::sub::LLCPlatformState& msg);
	void handleOdometry(const config::SSM::sub::Odometry& msg);
	void handleBladPosition(const config::SSM::sub::BladPosition& msg);
	void handlePERSensorsState(const config::SSM::sub::PERSensorsState& msg);
	void handleWPDDecisions(const config::SSM::sub::WPDDecisions& msg);
	void handleWSMExecutionState(const config::SSM::sub::WSMExecutionState& msg);
	void handleSMMEMissionState(const config::SSM::sub::SMMEMissionState& msg);
	void handleIEDSIMComponentState(const config::SSM::sub::IEDSIMComponentState& msg);
	void handleSMMEComponentState(const config::SSM::sub::SMMEComponentState& msg);
	void handleSSMComponentState(const config::SSM::sub::SSMComponentState& msg);
	void handleLLCComponentState(const config::SSM::sub::LLCComponentState& msg);
	void handleLOCComponentState(const config::SSM::sub::LOCComponentState& msg);
	void handlePERComponentState(const config::SSM::sub::PERComponentState& msg);
	void handlePPComponentState(const config::SSM::sub::PPComponentState& msg);
	void handleWPDComponentState(const config::SSM::sub::WPDComponentState& msg);
	void handleSSMCommand(const config::SSM::sub::SSMCommand& msg);
	void publishPlatformState(config::SSM::pub::PlatformState& msg);
	void publishSoftwareState(config::SSM::pub::SoftwareState& msg);
	void publishSensorsState(config::SSM::pub::SensorsState& msg);
	void publishSSMComponentState(config::SSM::pub::SSMComponentState& msg);
  void publishTransform(const tf::Transform& _tf, std::string srcFrame, std::string distFrame);
  tf::StampedTransform getLastTrasform(std::string srcFrame, std::string distFrame);
};
#endif /* COMPONENTMAIN_H_ */
