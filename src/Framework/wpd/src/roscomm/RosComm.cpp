
/*
 * RosComm.cpp
 *
 *  Created on: Thursday, 30. January 2014 06:47PM
 *      Author: autogenerated
 */
#include <ros/ros.h>
#include <std_msgs/String.h>
#include "RosComm.h"
#include "../component/ComponentMain.h"
#include <string>       // std::string
#include <iostream>     // std::cout
#include <sstream>
#include "ParameterHandler.h"
RosComm::RosComm(ComponentMain* comp,int argc,char** argv)
{
  ros::init(argc,argv,"PP_node");
  _comp=comp;
	_sub_MiniMap=ros::Subscriber(_nh.subscribe(fetchParam(&_nh,"WPD","MiniMap","sub"), 10, &RosComm::MiniMapCallback,this));
	_sub_LocalPathPlan=ros::Subscriber(_nh.subscribe(fetchParam(&_nh,"WPD","LocalPathPlan","sub"), 10, &RosComm::LocalPathPlanCallback,this));
	_sub_PosAttVel=ros::Subscriber(_nh.subscribe(fetchParam(&_nh,"WPD","PosAttVel","sub"), 10, &RosComm::PosAttVelCallback,this));
	_pub_Speed=ros::Publisher(_nh.advertise<config::WPD::pub::Speed>(fetchParam(&_nh,"WPD","Speed","pub"),10));
}
RosComm::~RosComm()
{
}

void RosComm::MiniMapCallback(const config::WPD::sub::MiniMap::ConstPtr &msg)
{
	_comp->handleMiniMap(*msg);
}
	

void RosComm::LocalPathPlanCallback(const config::WPD::sub::LocalPathPlan::ConstPtr &msg)
{
	_comp->handleLocalPathPlan(*msg);
}
	

void RosComm::PosAttVelCallback(const config::WPD::sub::PosAttVel::ConstPtr &msg)
{
	_comp->handlePosAttVel(*msg);
}
	

void RosComm::publishSpeed( config::WPD::pub::Speed &msg)
{
	_pub_Speed.publish(msg);
}
	
