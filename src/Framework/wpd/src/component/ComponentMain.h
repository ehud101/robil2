
/*
 * ComponentMain.h
 *
 *  Created on: Thursday, 06. February 2014 04:09PM
 *      Author: autogenerated
 */
#ifndef COMPONENTMAIN_H_
#define COMPONENTMAIN_H_
#include <std_msgs/String.h>
#include <ParameterTypes.h>
#include <tf/tf.h>
class RosComm;
class ComponentMain {
	RosComm* _roscomm;
public:
	ComponentMain(int argc,char** argv);
	virtual ~ComponentMain();
	void handleMiniMap(const config::WPD::sub::MiniMap& msg);
	void handleLocalPath(const config::WPD::sub::LocalPath& msg);
	void handleMaxSpeed(const config::WPD::sub::MaxSpeed& msg);
	void handleOdometry(const config::WPD::sub::Odometry& msg);
	void handleWPDCommand(const config::WPD::sub::WPDCommand& msg);
	void publishWPDSpeed(config::WPD::pub::WPDSpeed& msg);
	void publishWPDDecisions(config::WPD::pub::WPDDecisions& msg);
	void publishWPDState(config::WPD::pub::WPDState& msg);
	void publishWPDComponentState(config::WPD::pub::WPDComponentState& msg);
  void publishTransform(const tf::Transform& _tf, std::string srcFrame, std::string distFrame);
  tf::StampedTransform getLastTrasform(std::string srcFrame, std::string distFrame);
};
#endif /* COMPONENTMAIN_H_ */
